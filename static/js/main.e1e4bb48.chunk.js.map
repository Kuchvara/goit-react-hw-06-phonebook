{"version":3,"sources":["Components/Form/Form.jsx","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","index.js","Components/Form/Form.module.css","Components/ContactsList/ContactsList.module.css","Components/Filter/Filter.module.css"],"names":["Form","state","name","number","handleChange","event","setState","currentTarget","value","handlerSubmit","preventDefault","data","normalizedName","toLowerCase","duplicatedName","props","contacts","find","contact","message","alert","onSubmit","reset","className","styles","form","this","form_item","type","onChange","pattern","title","required","autoComplete","Component","ContactsList","handleDelete","map","contacts_text","contacts_button","onClick","id","Filter","filter","filter_text","filter_input","App","checkUniqueName","toLocaleLowerCase","lendth","uuidv4","changeFilter","handleFilter","normalizedFilter","includes","prevState","initialContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e1e4bb48.chunk.js","sourcesContent":["import styles from \"./Form.module.css\";\r\nimport React, { Component } from \"react\";\r\n\r\n\r\n// Форма через функцію\r\n// const Form = ({ handlerSubmit, handleChange }) => {\r\n  \r\n//   return (\r\n//    <form className={styles.form} onSubmit={handlerSubmit}>\r\n//       <label className={styles.form_item}>\r\n//         <input\r\n//         type=\"text\"\r\n//         name=\"name\"        \r\n//         onChange={handleChange}\r\n//         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//         title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//         required \r\n//         autoComplete=\"off\"/> Name\r\n//       </label>\r\n//       <label className={styles.form_item}>\r\n//         <input\r\n//         type=\"tel\"\r\n//         name=\"number\"\r\n//         onChange={handleChange}\r\n//         autoComplete=\"off\"\r\n//         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//         title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//         required/> Number\r\n//       </label>\r\n//         <button type=\"submit\">Add contact</button>  \r\n//       </form> \r\n//   )\r\n// }\r\n\r\n// Форма через клас\r\nclass Form extends Component {\r\n  state = {\r\n  name: '',\r\n  number: ''\r\n  }\r\n  \r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    })\r\n  };\r\n  \r\n  // checkUniqueName = data => {\r\n  //   const normalizedName = data.name.toLowerCase();\r\n  //   const duplicatedName = []\r\n  //     this.props.contacts.find(contact => contact.name.toLocaleLowerCase() === normalizedName)\r\n  //   const message = `${data.name} is already in contacts`\r\n\r\n  //   if (duplicatedName.length > 0) {\r\n  //     alert(message)\r\n  //   } else {\r\n  //     this.props.onSubmit(this.state);\r\n  //   }\r\n  // };\r\n\r\n  handlerSubmit = event => {\r\n    event.preventDefault();\r\n    const data = this.state;\r\n    const normalizedName = data.name.toLowerCase();\r\n    const duplicatedName = this.props.contacts.find(contact => contact.name.toLowerCase() === normalizedName);\r\n    const message = `${data.name} is already in contacts`;\r\n\r\n    if (!!duplicatedName) {\r\n      alert(message)   \r\n    } else {\r\n      this.props.onSubmit(this.state);\r\n    }    \r\n\r\n    this.reset();   \r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' })\r\n  };\r\n\r\n  render() {\r\n  return ( <form className={styles.form} onSubmit={this.handlerSubmit}>\r\n      <label className={styles.form_item}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          autoComplete=\"off\" /> Name\r\n      </label>\r\n      <label className={styles.form_item}>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n          autoComplete=\"off\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required /> Number\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  )}\r\n}\r\n\r\nexport default Form;","import styles from \"./ContactsList.module.css\";\r\n\r\nconst ContactsList = ({ contacts, handleDelete }) => {\r\n return (\r\n <ul>\r\n    {contacts.map((contact) => \r\n    (<li key={contact.id}>\r\n       <span className={styles.contacts_text}>{contact.name}:</span>\r\n       <span className={styles.contacts_text}>{contact.number}</span>\r\n       <button type=\"button\" className={styles.contacts_button} onClick={() => handleDelete(contact.id)}>Delete</button>\r\n    </li>)\r\n    )}          \r\n </ul>\r\n)}\r\n\r\nexport default ContactsList;","import styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ handleChange, filter }) => {\r\n\r\n  return (\r\n    <label className={styles.filter_text}> Find contacts by name <br/>\r\n        <input\r\n        className={styles.filter_input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={handleChange}        \r\n        autoComplete=\"off\"/>\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Filter","import React, {Component} from \"react\";\nimport Form from \"./Components/Form/Form\";\nimport ContactsList from \"./Components/ContactsList/ContactsList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n  contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},    \n  ],\n  filter: ''  \n  }\n\n  componentDidMount() {\n    const initialContacts = JSON.parse(localStorage.getItem('contacts'))\n\n    if(initialContacts) {this.setState({ contacts: initialContacts})}   \n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  checkUniqueName = data => {\n    const normalizedName = data.name.toLowerCase();\n    const duplicatedName = this.state.contacts.find(contact => contact.name.toLocaleLowerCase() === normalizedName)\n    const message = `${data.name} is already in contacts`\n\n    if (duplicatedName.lendth > 0) {\n      return alert(message);     \n    }  \n  }\n\n  handlerSubmit = data => {\n    const contact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number\n    }     \n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }))\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  handleFilter = (event) => {\n    const { filter, contacts } = this.state;   \n    const normalizedFilter = filter.toLowerCase();    \n\n    return (\n      contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n    );\n  }\n\n  handleDelete = (id) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const filteredContacts = this.handleFilter()\n\n    return (\n    <>\n      <h1>Phonebook</h1>     \n      <Form onSubmit={this.handlerSubmit} contacts={this.state.contacts}/>\n      <h2>Contacts</h2>\n      <Filter handleChange={this.changeFilter} filter={this.state.filter}/>      \n      <ContactsList contacts={filteredContacts} handleDelete={this.handleDelete}/>\n    </>  \n  );\n}}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3z6mB\",\"form_item\":\"Form_form_item__2_2aR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_button\":\"ContactsList_contacts_button__1yTs7\",\"contacts_text\":\"ContactsList_contacts_text__2Vh5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_text\":\"Filter_filter_text__1Nemm\",\"filter_input\":\"Filter_filter_input__20y9t\"};"],"sourceRoot":""}